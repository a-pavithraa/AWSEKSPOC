apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole

metadata:
  name: api-service-role

rules:
  - apiGroups: [""]
    resources: ["nodes", "services", "pods", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount

metadata:
  name: api-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding

metadata:
  name: api-service-role-binding

roleRef:
  kind: ClusterRole
  name: api-service-role
  apiGroup: rbac.authorization.k8s.io

subjects:
  - kind: ServiceAccount
    name: api-service-account
    namespace: default

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-service
data:  
  jwt.aws.userPoolId: user-pool-id
  jwt.aws.region: us-east-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    app: api-service
    s1p: api
spec:  
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service   
    spec:
      serviceAccountName: api-service-account      
      containers:
      - name: api-service        
        image: pavithravasudevan/api-gateway-service:0.0.3-SNAPSHOT 
        imagePullPolicy: Always     
        ports:
        - containerPort: 8765
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health/readiness
spec:
  type: NodePort
  selector:
    app: api-service
  ports:
  - port: 8765
    targetPort: 8765
